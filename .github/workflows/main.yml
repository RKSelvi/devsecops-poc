name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  #[workflow_dispatch]

env:
  AZURE_RESOURCE_GROUP: devsecops-poc-rg
  AZURE_WEBAPP_NAME: devsecopspocappcontainer
  AZURE_APP_PLAN: devsecopspocplan
  ACR_NAME: devsecopspocacr

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      name: checkout

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.100'
    - run: dotnet build -c Release DotNetCoreWebApp/DotNetCoreWebApp.csproj -o {env.DOTNET_ROOT}/app/build   

    - name: dotnet publish
      run: |
        pwd
        dotnet publish -c Release DotNetCoreWebApp/DotNetCoreWebApp.csproj -o {env.DOTNET_ROOT}/app/build
    
    - uses: azure/login@v1
      with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Create a ACR
      uses: azure/CLI@v1
      with:
       azcliversion: latest
       inlineScript: |
        az group create --name ${{ env.AZURE_RESOURCE_GROUP }} --location centralus
        az acr create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.ACR_NAME }} --sku Basic
                
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_SERVERNAME }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - run: |
        cd DotNetCoreWebApp
        docker build -t ${{ secrets.REGISTRY_SERVERNAME }}/dotnetcorewebapp:${{ github.sha }} .
        docker push ${{ secrets.REGISTRY_SERVERNAME }}/dotnetcorewebapp:${{ github.sha }} 
    
    # Container scan
    - uses: Azure/container-scan@v0
      with:
        image-name: ${{ secrets.REGISTRY_SERVERNAME }}/dotnetcorewebapp:${{ github.sha }}

    # Provision a new Container Instance
    - name: Create a new WebApp/ACI for Container
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az account show
          az configure --defaults group=${{ env.AZURE_RESOURCE_GROUP }} location=centralus
          az container create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --image '${{ secrets.REGISTRY_SERVERNAME }}/dotnetcorewebapp:${{ github.sha }}' --dns-name-label ${{ env.AZURE_WEBAPP_NAME }} --registry-login-server ${{ secrets.REGISTRY_SERVERNAME }} --registry-username ${{ secrets.REGISTRY_USERNAME }} --registry-password ${{ secrets.REGISTRY_PASSWORD }} --ports 80
      #   az appservice plan create --name ${{ env.AZURE_APP_PLAN }} --sku F1
      #   az webapp create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --plan ${{ env.AZURE_APP_PLAN }} --name ${{ env.AZURE_WEBAPP_NAME }}  -i nginx        

    # Failed to deploy web app as container as it reported that containerized web app has images & other files         
    # - uses: azure/webapps-deploy@v2
    #   with: 
    #     app-name: ${{ env.AZURE_WEBAPP_NAME }} 
    #     images: '${{ secrets.REGISTRY_SERVERNAME }}/dotnetcorewebapp:${{ github.sha }}'
       
    - name: Azure logout
      run: |
        az logout
