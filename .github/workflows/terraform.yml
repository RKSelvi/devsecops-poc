name: 'Terraform'

on:
  push:
    branches:
    - master

jobs:

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        inlineScript: |
         - az cloud set --name ${{ secrets.TF_AZURE_ENVIRONMENT }}
         - az login --service-principal -u ${{ secrets.TF_CLIENT_ID }} -p ${{ secrets.TF_CLIENT_SECRET }} --tenant ${{ secrets.TF_TENANT_ID }}
         - az account set --subscription ${{ secrets.TF_SUBSCRIPTION_ID }}
         - export ARM_CLIENT_ID=${{ secrets.TF_CLIENT_ID }}
         - export ARM_CLIENT_SECRET=${{ secrets.TF_CLIENT_SECRET }}​
         - export ARM_SUBSCRIPTION_ID=$(az account show --query id | xargs)
         - export ARM_TENANT_ID=$(az account show --query tenantId | xargs)
         - export ARTIFACT_STORAGE_ACCOUNT_NAME=${{ secrets.AF_ARTIFACTS_STORAGE_NAME }}​         
         - export ARTIFACT_RESOURCE_GROUP_NAME=${{ secrets.AZ_ARTIFACTS_RG }}​
    
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan

      # On push to master, build or change infrastructure according to Terraform configuration files    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve
